DROP TABLE IF EXISTS STAVKA;
CREATE TABLE STAVKA (
  id INT AUTO_INCREMENT UNIQUE NOT NULL,
  stavka DOUBLE NOT NULL,
  months INT NOT NULL,
  CONSTRAINT STAVKA_PRIMARY_KEY PRIMARY KEY (id)
);

DROP TABLE IF EXISTS CURRENCY;
CREATE TABLE CURRENCY (
  id INT AUTO_INCREMENT UNIQUE NOT NULL,
  currency VARCHAR(3) NOT NULL,
  CONSTRAINT CURRENCY_PRIMARY_KEY PRIMARY KEY (id)
);

DROP TABLE IF EXISTS BANK;
CREATE TABLE BANK (
  id INT AUTO_INCREMENT UNIQUE NOT NULL,
  currency_id INT UNIQUE NOT NULL,
  name VARCHAR(250) UNIQUE NOT NULL,
  CONSTRAINT BANK_PRIMARY_KEY PRIMARY KEY (id),
  CONSTRAINT BANK_FOREIGN_KEY FOREIGN KEY (currency_id) REFERENCES CURRENCY (id)
);

DROP TABLE IF EXISTS CLIENT;
CREATE TABLE CLIENT (
  id INT AUTO_INCREMENT UNIQUE NOT NULL,
  name VARCHAR(250) UNIQUE NOT NULL,
  CONSTRAINT CLIENT_PRIMARY_KEY PRIMARY KEY (id)
);

DROP TABLE IF EXISTS CREDIT;
CREATE TABLE CREDIT (
  id INT AUTO_INCREMENT UNIQUE NOT NULL,
  client_id INT UNIQUE NOT NULL,
  stavka_id INT UNIQUE NOT NULL,
  summa INT NOT NULL,
  CONSTRAINT CREDIT_PRIMARY_KEY PRIMARY KEY (id),
  CONSTRAINT CREDIT_FOREIGN_KEY FOREIGN KEY (client_id) REFERENCES CLIENT (id),
  CONSTRAINT CREDIT_FOREIGN_KEY2 FOREIGN KEY (stavka_id) REFERENCES STAVKA (id)
);



DROP TABLE IF EXISTS USER_DATA;
CREATE TABLE USER_DATA (
  id INT AUTO_INCREMENT UNIQUE NOT NULL,
  username VARCHAR(250) UNIQUE NOT NULL,
  password VARCHAR(50) NOT NULL,
  active INT NOT NULL,
  CONSTRAINT USER_DATA_PRIMARY_KEY PRIMARY KEY (id)
);

DROP TABLE IF EXISTS USER_ROLE;
CREATE TABLE USER_ROLE (
  user_id INT NOT NULL,
  roles VARCHAR(250) NOT NULL,
  CONSTRAINT USER_ROLE_FOREIGN_KEY FOREIGN KEY (user_id) REFERENCES USER_DATA (id)
);